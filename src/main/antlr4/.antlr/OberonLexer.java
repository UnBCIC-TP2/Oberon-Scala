// Generated from /home/gustavo/Documentos/TP2/Oberon-Scala/src/main/antlr4/Oberon.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class OberonLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		INT=53, TRUE=54, FALSE=55, Id=56, WS=57, COMMENT=58, LINE_COMMENT=59;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
			"T__49", "T__50", "T__51", "INT", "TRUE", "FALSE", "Id", "CharDef", "Digit", 
			"WS", "COMMENT", "LINE_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'MODULE'", "';'", "'END'", "'.'", "'TYPE'", "'CONST'", "'VAR'", 
			"'='", "'ARRAY'", "'OF'", "'RECORD'", "','", "':'", "'PROCEDURE'", "'('", 
			"')'", "'BEGIN'", "'['", "']'", "'#'", "'<'", "'<='", "'>'", "'>='", 
			"'*'", "'/'", "'&&'", "'+'", "'-'", "'||'", "':='", "'readInt'", "'write'", 
			"'IF'", "'THEN'", "'ELSE'", "'ELSIF'", "'WHILE'", "'DO'", "'REPEAT'", 
			"'UNTIL'", "'FOR'", "'TO'", "'IN'", "'..'", "'RETURN'", "'CASE'", "'|'", 
			"'LOOP'", "'EXIT'", "'INTEGER'", "'BOOLEAN'", null, "'True'", "'False'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, "INT", "TRUE", "FALSE", "Id", "WS", "COMMENT", 
			"LINE_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OberonLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Oberon.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=\u0190\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\6"+
		"\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25"+
		"\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33"+
		"\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3"+
		"%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3"+
		")\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3"+
		"/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\62"+
		"\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64"+
		"\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\6\66\u0154\n\66\r\66"+
		"\16\66\u0155\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\38\39\39\39\39\7"+
		"9\u0167\n9\f9\169\u016a\139\3:\5:\u016d\n:\3;\3;\3<\6<\u0172\n<\r<\16"+
		"<\u0173\3<\3<\3=\3=\3=\3=\7=\u017c\n=\f=\16=\u017f\13=\3=\3=\3=\3=\3="+
		"\3>\3>\3>\3>\7>\u018a\n>\f>\16>\u018d\13>\3>\3>\3\u017d\2?\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s\2u\2w;y"+
		"<{=\3\2\6\4\2C\\c|\3\2\62;\5\2\13\f\16\17\"\"\4\2\f\f\17\17\2\u0194\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\u0084"+
		"\3\2\2\2\7\u0086\3\2\2\2\t\u008a\3\2\2\2\13\u008c\3\2\2\2\r\u0091\3\2"+
		"\2\2\17\u0097\3\2\2\2\21\u009b\3\2\2\2\23\u009d\3\2\2\2\25\u00a3\3\2\2"+
		"\2\27\u00a6\3\2\2\2\31\u00ad\3\2\2\2\33\u00af\3\2\2\2\35\u00b1\3\2\2\2"+
		"\37\u00bb\3\2\2\2!\u00bd\3\2\2\2#\u00bf\3\2\2\2%\u00c5\3\2\2\2\'\u00c7"+
		"\3\2\2\2)\u00c9\3\2\2\2+\u00cb\3\2\2\2-\u00cd\3\2\2\2/\u00d0\3\2\2\2\61"+
		"\u00d2\3\2\2\2\63\u00d5\3\2\2\2\65\u00d7\3\2\2\2\67\u00d9\3\2\2\29\u00dc"+
		"\3\2\2\2;\u00de\3\2\2\2=\u00e0\3\2\2\2?\u00e3\3\2\2\2A\u00e6\3\2\2\2C"+
		"\u00ee\3\2\2\2E\u00f4\3\2\2\2G\u00f7\3\2\2\2I\u00fc\3\2\2\2K\u0101\3\2"+
		"\2\2M\u0107\3\2\2\2O\u010d\3\2\2\2Q\u0110\3\2\2\2S\u0117\3\2\2\2U\u011d"+
		"\3\2\2\2W\u0121\3\2\2\2Y\u0124\3\2\2\2[\u0127\3\2\2\2]\u012a\3\2\2\2_"+
		"\u0131\3\2\2\2a\u0136\3\2\2\2c\u0138\3\2\2\2e\u013d\3\2\2\2g\u0142\3\2"+
		"\2\2i\u014a\3\2\2\2k\u0153\3\2\2\2m\u0157\3\2\2\2o\u015c\3\2\2\2q\u0162"+
		"\3\2\2\2s\u016c\3\2\2\2u\u016e\3\2\2\2w\u0171\3\2\2\2y\u0177\3\2\2\2{"+
		"\u0185\3\2\2\2}~\7O\2\2~\177\7Q\2\2\177\u0080\7F\2\2\u0080\u0081\7W\2"+
		"\2\u0081\u0082\7N\2\2\u0082\u0083\7G\2\2\u0083\4\3\2\2\2\u0084\u0085\7"+
		"=\2\2\u0085\6\3\2\2\2\u0086\u0087\7G\2\2\u0087\u0088\7P\2\2\u0088\u0089"+
		"\7F\2\2\u0089\b\3\2\2\2\u008a\u008b\7\60\2\2\u008b\n\3\2\2\2\u008c\u008d"+
		"\7V\2\2\u008d\u008e\7[\2\2\u008e\u008f\7R\2\2\u008f\u0090\7G\2\2\u0090"+
		"\f\3\2\2\2\u0091\u0092\7E\2\2\u0092\u0093\7Q\2\2\u0093\u0094\7P\2\2\u0094"+
		"\u0095\7U\2\2\u0095\u0096\7V\2\2\u0096\16\3\2\2\2\u0097\u0098\7X\2\2\u0098"+
		"\u0099\7C\2\2\u0099\u009a\7T\2\2\u009a\20\3\2\2\2\u009b\u009c\7?\2\2\u009c"+
		"\22\3\2\2\2\u009d\u009e\7C\2\2\u009e\u009f\7T\2\2\u009f\u00a0\7T\2\2\u00a0"+
		"\u00a1\7C\2\2\u00a1\u00a2\7[\2\2\u00a2\24\3\2\2\2\u00a3\u00a4\7Q\2\2\u00a4"+
		"\u00a5\7H\2\2\u00a5\26\3\2\2\2\u00a6\u00a7\7T\2\2\u00a7\u00a8\7G\2\2\u00a8"+
		"\u00a9\7E\2\2\u00a9\u00aa\7Q\2\2\u00aa\u00ab\7T\2\2\u00ab\u00ac\7F\2\2"+
		"\u00ac\30\3\2\2\2\u00ad\u00ae\7.\2\2\u00ae\32\3\2\2\2\u00af\u00b0\7<\2"+
		"\2\u00b0\34\3\2\2\2\u00b1\u00b2\7R\2\2\u00b2\u00b3\7T\2\2\u00b3\u00b4"+
		"\7Q\2\2\u00b4\u00b5\7E\2\2\u00b5\u00b6\7G\2\2\u00b6\u00b7\7F\2\2\u00b7"+
		"\u00b8\7W\2\2\u00b8\u00b9\7T\2\2\u00b9\u00ba\7G\2\2\u00ba\36\3\2\2\2\u00bb"+
		"\u00bc\7*\2\2\u00bc \3\2\2\2\u00bd\u00be\7+\2\2\u00be\"\3\2\2\2\u00bf"+
		"\u00c0\7D\2\2\u00c0\u00c1\7G\2\2\u00c1\u00c2\7I\2\2\u00c2\u00c3\7K\2\2"+
		"\u00c3\u00c4\7P\2\2\u00c4$\3\2\2\2\u00c5\u00c6\7]\2\2\u00c6&\3\2\2\2\u00c7"+
		"\u00c8\7_\2\2\u00c8(\3\2\2\2\u00c9\u00ca\7%\2\2\u00ca*\3\2\2\2\u00cb\u00cc"+
		"\7>\2\2\u00cc,\3\2\2\2\u00cd\u00ce\7>\2\2\u00ce\u00cf\7?\2\2\u00cf.\3"+
		"\2\2\2\u00d0\u00d1\7@\2\2\u00d1\60\3\2\2\2\u00d2\u00d3\7@\2\2\u00d3\u00d4"+
		"\7?\2\2\u00d4\62\3\2\2\2\u00d5\u00d6\7,\2\2\u00d6\64\3\2\2\2\u00d7\u00d8"+
		"\7\61\2\2\u00d8\66\3\2\2\2\u00d9\u00da\7(\2\2\u00da\u00db\7(\2\2\u00db"+
		"8\3\2\2\2\u00dc\u00dd\7-\2\2\u00dd:\3\2\2\2\u00de\u00df\7/\2\2\u00df<"+
		"\3\2\2\2\u00e0\u00e1\7~\2\2\u00e1\u00e2\7~\2\2\u00e2>\3\2\2\2\u00e3\u00e4"+
		"\7<\2\2\u00e4\u00e5\7?\2\2\u00e5@\3\2\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8"+
		"\7g\2\2\u00e8\u00e9\7c\2\2\u00e9\u00ea\7f\2\2\u00ea\u00eb\7K\2\2\u00eb"+
		"\u00ec\7p\2\2\u00ec\u00ed\7v\2\2\u00edB\3\2\2\2\u00ee\u00ef\7y\2\2\u00ef"+
		"\u00f0\7t\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3\7g\2\2"+
		"\u00f3D\3\2\2\2\u00f4\u00f5\7K\2\2\u00f5\u00f6\7H\2\2\u00f6F\3\2\2\2\u00f7"+
		"\u00f8\7V\2\2\u00f8\u00f9\7J\2\2\u00f9\u00fa\7G\2\2\u00fa\u00fb\7P\2\2"+
		"\u00fbH\3\2\2\2\u00fc\u00fd\7G\2\2\u00fd\u00fe\7N\2\2\u00fe\u00ff\7U\2"+
		"\2\u00ff\u0100\7G\2\2\u0100J\3\2\2\2\u0101\u0102\7G\2\2\u0102\u0103\7"+
		"N\2\2\u0103\u0104\7U\2\2\u0104\u0105\7K\2\2\u0105\u0106\7H\2\2\u0106L"+
		"\3\2\2\2\u0107\u0108\7Y\2\2\u0108\u0109\7J\2\2\u0109\u010a\7K\2\2\u010a"+
		"\u010b\7N\2\2\u010b\u010c\7G\2\2\u010cN\3\2\2\2\u010d\u010e\7F\2\2\u010e"+
		"\u010f\7Q\2\2\u010fP\3\2\2\2\u0110\u0111\7T\2\2\u0111\u0112\7G\2\2\u0112"+
		"\u0113\7R\2\2\u0113\u0114\7G\2\2\u0114\u0115\7C\2\2\u0115\u0116\7V\2\2"+
		"\u0116R\3\2\2\2\u0117\u0118\7W\2\2\u0118\u0119\7P\2\2\u0119\u011a\7V\2"+
		"\2\u011a\u011b\7K\2\2\u011b\u011c\7N\2\2\u011cT\3\2\2\2\u011d\u011e\7"+
		"H\2\2\u011e\u011f\7Q\2\2\u011f\u0120\7T\2\2\u0120V\3\2\2\2\u0121\u0122"+
		"\7V\2\2\u0122\u0123\7Q\2\2\u0123X\3\2\2\2\u0124\u0125\7K\2\2\u0125\u0126"+
		"\7P\2\2\u0126Z\3\2\2\2\u0127\u0128\7\60\2\2\u0128\u0129\7\60\2\2\u0129"+
		"\\\3\2\2\2\u012a\u012b\7T\2\2\u012b\u012c\7G\2\2\u012c\u012d\7V\2\2\u012d"+
		"\u012e\7W\2\2\u012e\u012f\7T\2\2\u012f\u0130\7P\2\2\u0130^\3\2\2\2\u0131"+
		"\u0132\7E\2\2\u0132\u0133\7C\2\2\u0133\u0134\7U\2\2\u0134\u0135\7G\2\2"+
		"\u0135`\3\2\2\2\u0136\u0137\7~\2\2\u0137b\3\2\2\2\u0138\u0139\7N\2\2\u0139"+
		"\u013a\7Q\2\2\u013a\u013b\7Q\2\2\u013b\u013c\7R\2\2\u013cd\3\2\2\2\u013d"+
		"\u013e\7G\2\2\u013e\u013f\7Z\2\2\u013f\u0140\7K\2\2\u0140\u0141\7V\2\2"+
		"\u0141f\3\2\2\2\u0142\u0143\7K\2\2\u0143\u0144\7P\2\2\u0144\u0145\7V\2"+
		"\2\u0145\u0146\7G\2\2\u0146\u0147\7I\2\2\u0147\u0148\7G\2\2\u0148\u0149"+
		"\7T\2\2\u0149h\3\2\2\2\u014a\u014b\7D\2\2\u014b\u014c\7Q\2\2\u014c\u014d"+
		"\7Q\2\2\u014d\u014e\7N\2\2\u014e\u014f\7G\2\2\u014f\u0150\7C\2\2\u0150"+
		"\u0151\7P\2\2\u0151j\3\2\2\2\u0152\u0154\5u;\2\u0153\u0152\3\2\2\2\u0154"+
		"\u0155\3\2\2\2\u0155\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156l\3\2\2\2"+
		"\u0157\u0158\7V\2\2\u0158\u0159\7t\2\2\u0159\u015a\7w\2\2\u015a\u015b"+
		"\7g\2\2\u015bn\3\2\2\2\u015c\u015d\7H\2\2\u015d\u015e\7c\2\2\u015e\u015f"+
		"\7n\2\2\u015f\u0160\7u\2\2\u0160\u0161\7g\2\2\u0161p\3\2\2\2\u0162\u0168"+
		"\5s:\2\u0163\u0167\5s:\2\u0164\u0167\5u;\2\u0165\u0167\7a\2\2\u0166\u0163"+
		"\3\2\2\2\u0166\u0164\3\2\2\2\u0166\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168"+
		"\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169r\3\2\2\2\u016a\u0168\3\2\2\2"+
		"\u016b\u016d\t\2\2\2\u016c\u016b\3\2\2\2\u016dt\3\2\2\2\u016e\u016f\t"+
		"\3\2\2\u016fv\3\2\2\2\u0170\u0172\t\4\2\2\u0171\u0170\3\2\2\2\u0172\u0173"+
		"\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0175\3\2\2\2\u0175"+
		"\u0176\b<\2\2\u0176x\3\2\2\2\u0177\u0178\7\61\2\2\u0178\u0179\7,\2\2\u0179"+
		"\u017d\3\2\2\2\u017a\u017c\13\2\2\2\u017b\u017a\3\2\2\2\u017c\u017f\3"+
		"\2\2\2\u017d\u017e\3\2\2\2\u017d\u017b\3\2\2\2\u017e\u0180\3\2\2\2\u017f"+
		"\u017d\3\2\2\2\u0180\u0181\7,\2\2\u0181\u0182\7\61\2\2\u0182\u0183\3\2"+
		"\2\2\u0183\u0184\b=\2\2\u0184z\3\2\2\2\u0185\u0186\7\61\2\2\u0186\u0187"+
		"\7\61\2\2\u0187\u018b\3\2\2\2\u0188\u018a\n\5\2\2\u0189\u0188\3\2\2\2"+
		"\u018a\u018d\3\2\2\2\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018e"+
		"\3\2\2\2\u018d\u018b\3\2\2\2\u018e\u018f\b>\2\2\u018f|\3\2\2\2\n\2\u0155"+
		"\u0166\u0168\u016c\u0173\u017d\u018b\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}